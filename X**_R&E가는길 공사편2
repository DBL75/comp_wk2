#include<bits/stdc++.h>
using namespace std;
int n,m,k;
vector<bool> visit(11,false);
vector<vector<pair<int,int>>> adj(11);
vector<int> path;
vector<int> res;
void dfs(int cur,int sum)
{
    if (cur==n){
        for (int i=0; i<path.size(); i++){
            int w=path[i];
            res.push_back(sum-w+(w/2));
        }
        return;
    }
    for (int i=0;i<adj[cur].size(); i++){
        int next=adj[cur][i].first;
        int weight=adj[cur][i].second;
        if (visit[next]) continue;
        visit[next]=true;
        path.push_back(weight);
        dfs(next,sum+weight);
        path.pop_back();
        visit[next]=false;
    }
}
int main()
{
    cin>>n>>m>>k;
    while(m--){
        int u,v,w;
        cin>>u>>v>>w;
        adj[u].push_back({v,w});
        adj[v].push_back({u,w});
    }
    visit[1]=true;
    dfs(1,0);
    if (res.size()<k) cout<<"-1\n";
    else{
        sort(res.begin(),res.end());
        cout<<res[k-1]<<"\n";
    }
}
